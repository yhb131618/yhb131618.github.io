<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git blog</title>
    <link>https://yhb131618.github.io/blogguide/</link>
    <description>Recent content on Git blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <atom:link href="https://yhb131618.github.io/blogguide/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://yhb131618.github.io/blogguide/01-install-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yhb131618.github.io/blogguide/01-install-guide/</guid>
      <description>Chap01_Hugo&amp;amp;GO Install # Hugo 공식 웹사이트&#xA;Go Install&#xA;Hugo Install&#xA;위 링크로 들어가 각각 Hugo&amp;amp;Go를 PC에 install 한다. ![[assets/Pasted image 20231223232713.png]]&#x9;- 터미널을 열고 hugo와 Go가 정상적으로 설치되었는지 확인한다. 만약 설치 확인이 안되면 환경 설정을 해준다. 이후 터미널로 들어가 원하는 곳의 저장 위치로 Site를 생성한다. 예) C://새폴더 -&amp;gt; 터미널 Hugo new site TEST_project Site가 생성되었으면, 터미널을 열고 Hugo server 명령어를 입력한다. 이후 웹을 열어 localhost:1313 입력하여 정상적으로 웹사이트가 작동하는지 확인한다.</description>
    </item>
    <item>
      <title></title>
      <link>https://yhb131618.github.io/blogguide/02-hugo_features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yhb131618.github.io/blogguide/02-hugo_features/</guid>
      <description>01_Details # Details shortcode is a helper for details html5 element. It is going to replace expand shortcode.&#xA;Title Markdown content # Lorem markdownum insigne&amp;hellip;&#xA;02_Columns # Columns help organize shorter pieces of content horizontally for readability.&#xA;Left Content # Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa protulit, sed sed aere valvis inhaesuro Pallas animam: qui quid, ignes.</description>
    </item>
    <item>
      <title></title>
      <link>https://yhb131618.github.io/blogguide/03-obsidian-guide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yhb131618.github.io/blogguide/03-obsidian-guide/</guid>
      <description>옵시디언 유튜브 강좌&#xA;브라이언의 브레인 트리니티( https://www.youtube.com/watch?v=u2UfMCH42Tk) 01_단축키&amp;amp;링크 # 단축키 # 보기/편집 : Ctrl+E 커맨드 : Ctrl+P 최근파일 : Ctrl+r 링크 # 메모 링크&#xA;기존에 존재하는 메모에 링크 [[file]] 현재 존재하지 않는 메모에 링크 [[no-file]] 미래에 작성할 노트 이름을 미리 추가 해당 링크, 노드를 클릭하면 해당 이름을 가진 노트가 생성된다. 특정 부분 링크&#xA;메모의 섹션 링크 [[filename#section]] 메모의 부분 링크 [[filename^linehash]] 임베드 ![[name]]&#xA;파일 임베드(이미지, 오디오) 메모를 직접 임베드 02_Callout # [!</description>
    </item>
    <item>
      <title></title>
      <link>https://yhb131618.github.io/blogguide/04-mermaid/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yhb131618.github.io/blogguide/04-mermaid/</guid>
      <description>03_[[04) Mermaid |다이어그램]] # 다이어그램 라이브에디터&#xA;hugo.html # config 파일에 아래 코드 추가 [[module.imports]] path = &amp;#34;github.com/hugomods/mermaid&amp;#34; [params] [params.mermaid] js_url = &amp;#39;https://cdn.jsdelivr.net/npm/mermaid@latest/dist/mermaid.esm.min.mjs&amp;#39; flowchart TD&#xA;A&amp;ndash;&amp;gt;B;&#xA;A&amp;ndash;&amp;gt;C; C&amp;ndash;&amp;gt;D;&#xA;flowchart TD A--&gt;B; A--&gt;C; C--&gt;D; classDiagram Animal &amp;lt;|&amp;ndash; Duck Animal &amp;lt;|&amp;ndash; Fish Animal &amp;lt;|&amp;ndash; Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() }</description>
    </item>
    <item>
      <title></title>
      <link>https://yhb131618.github.io/blogguide/05-hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yhb131618.github.io/blogguide/05-hugo/</guid>
      <description>Hugo가 참조하는 템플릿 # Hugo CLI를 이용해 Site를 만들게 되면 아래와 같은 구조를 가지게 된다.&#xA;$ tree test test ├── archetypes │ └── default.md ├── config.toml ├── content ├── data ├── layouts ├── static └── themes 6 directories, 2 files 여기서 우리가 눈여겨 봐야할 디렉토리는 layouts와 themes 폴더이다. 공식 문서의 내용을 보면 알 수 있듯이, layouts 폴더 안에 해당 템플릿이 있는지 먼저 확인한 후, 없으면 지정한 테마의 폴더(themes)안 의 layouts 폴더에 정의된 템플릿을 사용한다는 것이다.</description>
    </item>
    <item>
      <title></title>
      <link>https://yhb131618.github.io/blogguide/blogguide/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yhb131618.github.io/blogguide/blogguide/</guid>
      <description></description>
    </item>
  </channel>
</rss>
