<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://localhost:1313/7.-it_network/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <atom:link href="http://localhost:1313/7.-it_network/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:1313/7.-it_network/osi-7-layler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/7.-it_network/osi-7-layler/</guid>
      <description>![[assets/Pasted image 20231225181003.png]]&#xA;OSI 7계층 # 참조 https://shlee0882.tistory.com/110&#xA;1계층 # 물리계층(Physical Layer)&#xA;이 계층에서는 주로 전기적, 기계적, 기능적인 특성을 이용해서 통신 케이블로 데이터를 전송하게 된다. 이 계층에서 사용되는 통신 단위는 비트이며 이것은 1과 0으로 나타내어지는, 즉 전기적으로 On, Off 상태라고 생각하면 된다. 이 계층에서는 단지 데이터를 전달만 할 뿐 전송하려는(또는 받으려는)데이터가 무엇인지, 어떤 에러가 있는지 등에는 전혀 신경 쓰지 않는다. 단지 데이터 전기적인 신호로 변환해서 주고받는 기능만 할 뿐이다. 이 계층에 속하는 대표적인 장비는 통신 케이블, 리피터, 허브등이 있다.</description>
    </item>
    <item>
      <title>Vitual</title>
      <link>http://localhost:1313/7.-it_network/virtual-netork/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/7.-it_network/virtual-netork/</guid>
      <description>[[content/2. IT_Cloud/Common_커널|Common_커널]]&#xA;CPU의 인스트럭션 실행 ![[assets/Untitled 14.png]]&#xA;- Ring 0에 가까울 수록 높은 권한을 가진 명령을 실행할 수 있다. - 응용프로그램은 Ring 3에서 실행되고, 운영체제는 Ring 0에서 특권 명령 (privileged mode)을 사용하여 필요한 컴퓨팅 자원에 접근이 가능하다. 가상화의 종류 # </description>
    </item>
    <item>
      <title>etc_VPN</title>
      <link>http://localhost:1313/7.-it_network/etc_vpn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/7.-it_network/etc_vpn/</guid>
      <description>VPN # Virtual Private Network&#xA;VPN이란 서울역에서 부산역까지 한번에 연결하는 터널을 의미한다. 그러므로 서울역에서 근무하는 근로자는 부산역으로 바로 이동하여 일을 할 수 있다. ![[assets/Untitled.png]]&#xA;사설망: 특정 지역에서만 통신이 되는 네트워크를 말한다. 보통 보안이 철저한 군용 통신망과 기업 통신망을 가리켜 사설망이라고 부른다. 또는 폐쇄망이라고도 부른다.&#xA;공중망: 전세계적으로 통신이 가능한 인터넷을 공중망이라고 부른다.&#xA;PN의 핵심은 바로 서울역과 부산역을 잇는 ‘터널링’ 기술이라고 볼 수 있다.&#xA;예를 들어, 한국에서 한국식 전화번호 형식 192.168.0.X을 가지고 통화가 가능하지만, 미국에서는 미국식 전화번호 형식 10.</description>
    </item>
    <item>
      <title>etc_SDN</title>
      <link>http://localhost:1313/7.-it_network/etc_sdn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/7.-it_network/etc_sdn/</guid>
      <description>SDN # SDN(Software-Defined Networking)&#xA;처음 SDN 개념을 접했을 때는 너무 개념이 어려웠다.&#xA;하지만, 실무로 겪어보니 굉장히 쉬운 개념이었다.&#xA;![[assets/Untitled 9.png]]&#xA;![[assets/Untitled 4 1.png]] 한마디로 하드웨어 인프라(네트워크 장비) 와 통신하기 위해서 소프트웨어 기반 컨트롤러 또는 ==애플리케이션 프로그래밍 인터페이스(API)==를 활용하는 네트워킹에 대한 접근 방법이었다.&#xA;SDN과 NFVO 개념이 혼동되긴 한다.&#xA;SDN # 네트워크를 프로그래밍 하는 것이 중점으로, 네트워크를 프로비저닝하고 관리하기 위한 외부적인 수단(중앙 애플리케이션 컨트롤러)이 핵심이다. (검색 자료를 보면 L2~L3 중심이다) 네트워크 추상화 (Network Abstraction)</description>
    </item>
    <item>
      <title>etc_NFVO</title>
      <link>http://localhost:1313/7.-it_network/etc_nfvo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/7.-it_network/etc_nfvo/</guid>
      <description>NFVO # Network Function Virtualization Occhestration&#xA;![[assets/Untitled 1 4.png]] ![[assets/Untitled 2 6.png]]&#xA;이테크시스템의 재직 당시 처음 접했던 기술.&#xA;5G 무선 통신 코어망을 구축당시 NFVO 기술을 활용하여 각 KT의 지사에 구축했었다.&#xA;아래는 MANO의 기본적인 아키텍처이다.&#xA;한 달 내내 아래 그림이 어떤 의미인지 공부하는데, 꽤 애를 먹었다. 더불어 그 당시에는 NFVO 관련 자료가 없었던 것으로 기억한다.&#xA;![[assets/Untitled 3 5.png]]![[assets/Untitled 13.png]]&#xA;재직 당시에는 위의 아키텍처 기반으로 openstack 기술을 활용하여 Cisco의 무선 네트워크 이미지를 배포하고, 구축하는 작업을 했었다.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/7.-it_network/7.-it_network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/7.-it_network/7.-it_network/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/7.-it_network/dnsdomain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/7.-it_network/dnsdomain/</guid>
      <description> Domain # 01__Domain Purchase # 도메인 구입 이전 도메인 구입 사이트에서 회원가입 진행 ![[assets/Pasted image 20240111140259.png]] __ 1.1_Domain Name search # 사용할 도메인을 검색 후 선택 ![[assets/Pasted image 20240111141009.png]] __ 1.2_Domain Name Pay # 결제 진행 후 ![[assets/Pasted image 20240111141534.png]] __ 1.3_Domain Name Register # ![[assets/Pasted image 20240111142335.png]] ![[assets/Pasted image 20240111142845.png]] ![[assets/Pasted image 20240111142901.png]]&#xA;호스트 : WWW IP : 퍼블릭 IP 적용시간은 최소 몇 십분에서~최대 7일까지 소요된다. </description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/7.-it_network/http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/7.-it_network/http/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/7.-it_network/network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/7.-it_network/network/</guid>
      <description>``&#xA;Chap01 Network # ![[assets/Pasted image 20231226074930.png]]&#xA;![[assets/Pasted image 20231225180724.png]]&#xA;네트워크가 동작하려면, 통신 규약(프로토콜)이 필요하다. 핸드폰 전화번호처럼 010-XXXX-XXXX와 같은 규칙을 통해 통신하는 것을 통신 규약이라고 하며, 네트워크는 이와 같은 규약을 7 계층으로 세부적으로 나누어 통신한다. 통신 규약을 7계층으로 나누는 것을 OSI 7계층 참조 모델이라고 한다. 컴퓨터 제조사나 네트워크 제조사, 어플리케이션은 이 OSI 7계층의 통신 규격에 따라 제품을 만들어 전세계와 인터넷 통신이 가능케 하고 있다. ![[assets/Pasted image 20231225181003.png]] TCP/IP 계층 모델은 OSI 7계층을 기능적으로 묶어서 표현했다고 말할 수 있다.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/7.-it_network/restful-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/7.-it_network/restful-api/</guid>
      <description>RESTful API # 그냥 데이터만 리턴한다고 RESTful API라고 부르지는 않는다. RESTful API는 몇 가지 원칙이 있는데 그 조건을 만족해야 RESTful API라고 부르게 된다.&#xA;Uniform Interface: 데이터를 식별 가능하게 해야한다는 원칙. url만 보고도 어떤 데이터를 어디로 전송하는 지 알아야 한다는 것이다. http://locahost:8090/board/insertBoard.do?boardNo=1 //boardNo=1인 데이터 입력 Client Server: 클라이언트와 서버는 분리되어 있어야 하며 클라이언트는 서버로 요청을 보내고 서버는 클라이언트에게 요청에 대한 응답을 보내줘야 한다는 원칙. Statless: Http 프로토콜을 사용해서 전송하기 때문에 상태를 저장하지 않으면 요청에 대한 모든정보가 한번에 담겨서 전송돼야 한다.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/7.-it_network/swagger/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/7.-it_network/swagger/</guid>
      <description></description>
    </item>
  </channel>
</rss>
