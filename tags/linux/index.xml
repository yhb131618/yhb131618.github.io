<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on My New Hugo Site</title>
    <link>https://yhb131618.github.io/tags/linux/</link>
    <description>Recent content in Linux on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-KR</language>
    <atom:link href="https://yhb131618.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://yhb131618.github.io/2.-it_cloud/cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yhb131618.github.io/2.-it_cloud/cloud/</guid>
      <description>개요 # 01_클라우드의 역사 # 1960년대 가상화라는 용어를 사용하기 시작 당시에는 전 가상화 기법을 사용하여 구현 에뮬레이터도 존재 다양한 하이퍼바이저의 출현 IBM의 Logical Partition VMware Xen Hyper-V KVM 가상화란 물리적 하드웨어 리소스(CPU, RAM, STORAGE, NETWORK)들을 직접 공유하는 방식 또는 호스트 OS에 의해 제공받는 방식으로 만들어지는 하나의 Virtual PC이다.&#xA;IBM M44/44X 시스템에서 유래하였다.&#xA;flowchart LR BareMetal --&gt; 가상화; 가상화 --&gt; 유형1; 가상화 --&gt; 유형2; 유형1 --&gt; 커널_공유방식; 유형2 --&gt; Host_공유방식; 유형1 : 하이퍼바이저(KVM, GEN, ESXI) 유형2 : (Vmware)</description>
    </item>
    <item>
      <title></title>
      <link>https://yhb131618.github.io/1.-it_os/linux_lvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yhb131618.github.io/1.-it_os/linux_lvm/</guid>
      <description>Linux_LVM # LVM(Logical Volume Manager)는 리눅스의 저장 공간을 효율적이고 유연하게 관리하기 위한 커널의 한 부분이다.&#xA;LVM이 아닌 기존 방식의 경우, 하드 디스크를 파티셔닝 한 후 OS 영역에 마운트하여 read/wirte를 수행했다.&#xA;이 경우 저장 공간의 크기가 고정되어서 증설/축소가 어렵다. 이를 보완하기 위한 방법으로 LVM을 구성할 수 있다.&#xA;LVM은 파티션 대신에 volume이라는 단위로 저장 장치를 다룬다.&#xA;스토리지의 확장,변경에 유연하며, 크기를 변경할 때 기존 데이터의 이전이 필요 없다.&#xA;512g nvme 단일 ssd vs 256g nvme 2개 ssd</description>
    </item>
    <item>
      <title></title>
      <link>https://yhb131618.github.io/1.-it_os/linux_kvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yhb131618.github.io/1.-it_os/linux_kvm/</guid>
      <description>KVM이란? (Ubuntu 20.04) # __ 1.1_KVM 패키지 설명 # qemu-kvm KVM 하이퍼바이저에 대한 하드웨어 에뮬레이션을 제공 Kernel Space - KVM User Space - QEMU libvirt-daemon-system libvirt 데몬을 시스템 서비스로 실행하는 구성 파일 리눅스에서 Hypervisor 기반 가상화 관리 및 제어도구 libvirt-clients 가상화 플랫폼을 관리하기위한 소프트웨어 bridge-utils 이더넷 브리지를 구성하기위한 명령 줄 도구 세트 virtinst 가상 머신을 만들기위한 명령 줄 도구 집합 virt-manager 사용하기 쉬운 GUI 인터페이스와 libvirt를 통해 가상 머신을 관리하기위한 명령 줄 유틸리티 __ 1.</description>
    </item>
    <item>
      <title></title>
      <link>https://yhb131618.github.io/1.-it_os/linux_console/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yhb131618.github.io/1.-it_os/linux_console/</guid>
      <description> Console 가상 콘솔 tty0, tty1, tty2 &amp;hellip;tty6 pts/7은 X-윈도우 ttyS0, ttyS1은 시리얼 콘솔을 말함 GRUB </description>
    </item>
    <item>
      <title></title>
      <link>https://yhb131618.github.io/1.-it_os/linux_ntp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://yhb131618.github.io/1.-it_os/linux_ntp/</guid>
      <description>1. Chrony 설치 확인 # 1. Chrony 설치 확인 # 먼저, chronyd 서비스가 시스템에 설치되어 있는지 확인합니다. 설치되어 있지 않다면 설치합니다:&#xA;bashCopy code&#xA;sudo yum install chrony&#xA;2. Chrony 서비스 시작 및 활성화 # chronyd 서비스를 시작하고 부팅 시 자동으로 실행되도록 설정합니다:&#xA;bashCopy code&#xA;sudo systemctl start chronyd sudo systemctl enable chronyd&#xA;3. 시간 동기화 확인 # 시스템 시계가 NTP 서버와 정확히 동기화되었는지 확인합니다:&#xA;bashCopy code&#xA;chronyc tracking&#xA;이 명령은 현재 시간 소스와 그 정확도에 대한 정보를 보여줍니다.</description>
    </item>
  </channel>
</rss>
